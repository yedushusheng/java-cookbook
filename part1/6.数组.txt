1. 概念
数组是一个固定长度的，包含了相同类型数据的容器。

2. 创建
（1）声明数组：[]表示该变量是一个数组
int[] a; 声明了一个数组变量。
说明：
int 表示数组里的每一个元素都是一个整数
a 是变量名
但是，仅仅是这一句声明，不会创建数组；有时候也会写成int a[]; 没有任何区别

（2）创建数组
创建数组的时候，要指明数组的长度。 
new int[5] 
引用： 
如果变量代表一个数组，比如a,我们把a叫做引用 
声明一个引用 int[] a;
让a这个引用，指向数组：
a = new int[5]; 

（3）访问数组
数组下标基0，下标0，代表数组里的第一个数

（4）数组长度
.length属性用于访问一个数组的长度（数组成员变量）
说明：数组访问下标范围是0到长度-1，一旦超过这个范围,就会产生数组下标越界异常

3. 初始化数组
有两种初始化方式：声明同时赋值，先声明后赋值

4. 复制数组
把一个数组的值，复制到另一个数组中System.arraycopy(src, srcPos, dest, destPos, length)
说明：
src: 源数组
srcPos: 从源数组复制数据的起始位置
dest: 目标数组
destPos: 复制到目标数组的起始位置
length: 复制的长度

5. Array
Arrays是针对数组的工具类，可以进行 排序，查找，复制填充等功能。 大大提高了开发人员的工作效率。
（1）数组复制
与使用System.arraycopy进行数组复制类似的， Arrays提供了一个copyOfRange方法进行数组复制。
不同的是System.arraycopy，需要事先准备好目标数组，并分配长度。 copyOfRange 只需要源数组就就可以了，通过返回值，就能够得到目标数组了。
除此之外，需要注意的是 copyOfRange 的第3个参数，表示源数组的结束位置，是取不到的。
（2）转为字符串
如果要打印一个数组的内容，就需要通过for循环来挨个遍历，逐一打印，但是Arrays提供了一个toString()方法，直接把一个数组，转换为字符串，这样方便观察数组的内容。
（3）排序
Arrays工具类提供了一个sort方法，只需要一行代码即可完成排序功能。
（4）搜索
查询元素出现的位置，需要注意的是，使用binarySearch进行查找之前，必须使用sort进行排序
如果数组中有多个相同的元素，查找结果是不确定的

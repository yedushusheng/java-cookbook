1、定义
导致程序的正常流程被中断的事件，叫做异常。

2、异常处理
常见手段：try catch finally throws

finally:无论是否出现异常，finally中的代码都会被执行

throws与throw有如下区别：
1). throws 出现在方法声明上，而throw通常都出现在方法体内;
2). throws 表示出现异常的一种可能性，并不一定会发生这些异常；
    throw则是抛出了异常，执行throw则一定抛出了某个异常对象。

3. 异常分类
异常分类： 可查异常，运行时异常和错误3种 。其中，运行时异常和错误又叫非可查异常。
(1). 可查异常： CheckedException
可查异常即必须进行处理的异常，要么try catch住,要么往外抛，谁调用，谁处理，比如 FileNotFoundException
如果不处理，编译器，就不让你通过
(2). 运行时异常
运行时异常RuntimeException指： 不是必须进行try catch的异常 
常见运行时异常: 
除数不能为0异常:ArithmeticException 
下标越界异常:ArrayIndexOutOfBoundsException 
空指针异常:NullPointerException 
在编写代码的时候，依然可以使用try catch throws进行处理，与可查异常不同之处在于，即便不进行try catch，也不会有编译错误 
Java之所以会设计运行时异常的原因之一，是因为下标越界，空指针这些运行时异常太过于普遍，如果都需要进行捕捉，代码的可读性就会变得很糟糕。
